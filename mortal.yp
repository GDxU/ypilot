# can be damaged and killed
a Mortal thing has
  a number of hitPoints (default 1)
  a lastDamageOwner (default nothing)

# can damage other things
a Damaging thing has
  a number of hitPoints (default 1)

in the event ?a Damages ?b by ?damage then
  ?a is a Damaging thing
  ?b is a Mortal thing
  ?damage is a number

# Damaging things deduct hitPoints from Mortal things when they collide
when ?a hits ?b and
  ?a is Damaging with hitPoints ?damage
  ?b is Mortal
then
  ?a Damages ?b by ?damage

when ?a Damages ?b by ?damage and
  ?b is Mortal with hitPoints ?hp
  ?a is Owned with owner ?owner
then
  ?b becomes
    Mortal with hitPoints (?hp - ?damage) and lastDamageOwner ?owner

when ?a Damages ?b by ?damage and
  ?b is Mortal with hitPoints ?hp
  ?a is not Owned
then
  ?b becomes
    Mortal with hitPoints (?hp - ?damage) and lastDamageOwner nothing

# basics of death and killing
in the event ?a Dies then ?a is a Mortal thing
in the event ?a Kills ?b then ?b is a Mortal thing
when ?a Kills ?b then ?b Dies
when ?b Dies then ?b becomes not Mortal

when ?b becomes Mortal with hitPoints ?hp and lastDamageOwner ?a and
  (?hp <= 0)
  (?a != nothing)
then ?a Kills ?b

when ?b becomes Mortal with hitPoints ?hp and lastDamageOwner nothing and
  (?hp <= 0)
then ?b Dies

# Dead mostly just marks things that have died, but adjectives are required to
# have properties, so we might as well include a death point
a Dead thing has
  a deathPoint which is a Located thing (default nothing)

# just in case someone wants something that is Mortal but not Located, whose
# hitPoints would be deducted by something other than Damaging hits
when ?a Dies and ?a is not Located
then ?a becomes Dead

# when you have no more hitPoints, you become Dead at your current location,
# but you temporarily go to a private space (to avoid becoming not Located at
# all, which isn't allowed for e.g. player ships)
when ?a Dies and
  ?a is Located with space ?s and position ?p
then
  a new Point ?dp is added which is
    Located with space ?s and position ?p
  a new Space ?purgatory is added
  ?a becomes
    Located with space ?purgatory
    Dead with deathPoint ?dp

# returns to a spawn point after being killed, after a delay
a Respawnable thing is Mortal and has
  a spawnPoint which is a Located thing
  a spawnDelay which is a number (default 20) # initial timeToRespawn
  a number of lives (default ∞)
  a number of initialHitPoints (default 1)

# currently waiting to respawn
a Respawning thing is Dead and has
  a timeToRespawn which is a number

in the event ?a Respawns at ?sp with hitPoints ?hp then
  ?a is a Respawning thing
  ?sp is a Vec2 object
  ?hp is a number

# when you die and have lives left, decrement lives and start respawning
when ?a Dies and
  ?a is Respawnable with spawnDelay ?d and lives ?l
  (?l > 0)
then
  ?a becomes
    Respawnable with lives (?l - 1)
    Respawning with timeToRespawn ?d

# count down timeToRespawn each tick
when the clock ticks and
  there is a thing ?a which is Respawning with timeToRespawn ?t
  (?t > 0)
then ?a becomes Respawning with timeToRespawn (?t - 1)

# respawn now
when ?a becomes Respawning with timeToRespawn 0 and
  ?a is Respawnable with spawnPoint ?sp and initialHitPoints ?hp
then ?a Respawns at ?sp with hitPoints ?hp

when ?a Respawns at ?sp with hitPoints ?hp and
  ?a is Located with space ?purgatory
  ?sp is Located with space ?s and position ?p
then
  ?a becomes
    not Respawning
    Located with space ?s and position ?p
    Mortal with hitPoints ?hp
  ?purgatory is removed

# reset velocity and orientation when we finish respawning (but only if
# Mobile/Oriented to begin with)
when ?a Respawns and ?a is Mobile
then ?a becomes Mobile with velocity Vec2[0,0]

when ?a Respawns and ?a is Oriented
then ?a becomes Oriented with orientation (-π/2) # FIXME should be a property of the spawn point and/or Respawnable?
# TODO decide whether omitting later arguments of a custom event used as a when trigger is OK or not (it happens to work, but...)
