title: "Blobs"
author: "Will112358"

use "standard:wall.yp"
use "standard:bouncy.yp"
use "standard:motile.yp"
use "standard:bullet.yp"
use "standard:holding.yp"
use "standard:controls.yp"
use "standard:owned.yp"
use "standard:gun.yp"
use "standard:no-friendly-fire.yp"

a Map is Mapped
a Ship is a BasicShip and Mortal and Motile and Bouncy and Visible
an Item is Fleeting and Mobile and Tangible and Visible

when the game starts
then
  let ?size be Vec2[50,50]
  a new Space ?space is added which is Toroidal with size (?size * 32)
  a new Map ?map is added which is
    Located with space ?space
    Mapped with mapSize ?size and map """
xxx              xxxxxxx                       xxx
xxx              axxxxxs                       xxx
xxs                                            axx
                                                  
                            qxxxw                 
                            xxxxx                 
      qxxxxw                xxxxx                 
      xxxxxx                xxxxx                 
      xxxxxx                xxxxx                 
      xxxxxx                axxxs                 
      axxxxs                                      
                                                  
w                                             qxxx
xxw                                        qxxxxxx
xxxxx                                      xxxxxxx
xxxxs                                      axxxxxx
                                                  
                                                  
                                                  
                  qxxw                            
                  xxxx                            
                  xxxx                            
                  xxxx                            
                  axxs                            
      qxw                                         
      xxx                          qxxxw          
      xxx                         qxxxxxw         
      axs                         xxxxxxxxw       
             qxxw                 xxxxxxxxx       
             xxxxxw               axxxxxxxx       
             xxxxxxxw              axxxxxxs       
             axxxxxxxw                            
                axxxxx                            
                 axxxs                            
                                                  
                                                  
        xxxw                                      
        xxxxw                                     
        axxxx                                     
         xxxxw           qxxxxxxxw    qxxw        
         axxxx           xxxxxxxxx    xxxx        
                         xxxxxxxxs    axxs        
                         axxxxxs                  
                                                  
                                                  
                                                  
                                                  
xxw                                            qxx
xxx                                            xxx
xxx               qxxxxw                       xxx
"""
  ?map is read

when ?player is added and
  ?player is a Player
  there is a thing ?map which is
    Located with space ?space
  ?map is a Map
then
  a new Gun ?gun is added which is
    Shooty with muzzleVelocity 5
    Repeating with period 5
  a new Slot ?slot1 is added which is Capacious with content ?gun
  a new Slot ?slot2 is added
  # TODO 3-10
  let ?spawnPos be (Vec2[25.5,25.5] * 32)
  a new Point ?spawnPoint is added which is
    Located with space ?space and position ?spawnPos
  a new Ship ?ship is added which is
    Located with space ?space and position ?spawnPos
    Respawnable with spawnPoint ?spawnPoint
    Oriented with orientation (-Ï€/2)
    Tangible with shape [Vec2[15,0], Vec2[-9,8], Vec2[-9,-8]]
    Bouncy with coefficientOfRestitution 0.2
    Visible with graphics [<polygon points="15,0 -9,8 -9,-8" stroke="white" />]
    Holding with slots [?slot1, ?slot2] # TODO 3-10
    Selective
    Owned with owner ?player
  ?player becomes Piloting with ship ?ship

# keep score

a Scored thing has a score which is a number (default 0)

when ?player is added and ?player is a Player
then ?player becomes Scored with score 0 # FIXME default not working

in the event ?x Scores ?n then
  ?x is a Scored thing
  ?n is a number

when ?x Scores ?n and
  ?x is Scored with score ?oldScore
then
  ?x becomes Scored with score (?oldScore + ?n)

when ?x Scores ?n and
  ?x is Aligned with team ?t
  ?t is Scored with score ?oldScore
then ?t becomes Scored with score (?oldScore + ?n)

when ?a Kills ?b
then ?a Scores 1

when ?a Dies and ?a is Owned with owner ?aOwner
then ?aOwner Scores (-1)

a Sized thing has a size which is a number (default 0)
a Team is Named and Sized and Scored

# make two teams and track their sizes, and make a scoreboard

when the game starts and
  there is a thing ?playerType which is Named with name "Player"
  there is a thing ?teamType which is Named with name "Team"
then
  a new Team ?team1 is added which is Named with name "Team 1"
  a new Team ?team2 is added which is Named with name "Team 2"
  a new Column ?c1 is added which is
    Named with name "score"
    Columnar with cellPath "Scored score" and reverseSort true
  a new Column ?c2 is added which is
    Named with name "name"
    Columnar with cellPath "Named name"
  a new Board ?b is added which is
    BoardLike with
      columns [?c1, ?c2] and
      rowTypes [?playerType, ?teamType] and
      sortedColumns [?c1, ?c2]

the event ?player Joins ?team can happen
the event ?player Leaves ?team can happen

when ?player Joins ?team and
  ?team is Sized with size ?oldSize
then
  ?player becomes Aligned with team ?team
  ?team becomes Sized with size (?oldSize + 1)

when ?player Leaves ?team and
  ?team is Sized with size ?oldSize
then
  # ?player becomes not Aligned
  ?team becomes Sized with size (?oldSize - 1)

when ?player is removed and ?player is Aligned with team ?team
then ?player Leaves ?team

# add new players to the smaller team (or team 1 if there's a tie)

when ?player is added and
  ?player is a Player
  there is a thing ?team1 which is
    Named with name "Team 1"
    Sized with size ?team1size
  there is a thing ?team2 which is
    Named with name "Team 2"
    Sized with size ?team2size
  (?team1size <= ?team2size)
then ?player Joins ?team1

when ?player is added and
  ?player is a Player
  ?player is not Aligned # prevent both rules from firing
  there is a thing ?team1 which is
    Named with name "Team 1"
    Sized with size ?team1size
  there is a thing ?team2 which is
    Named with name "Team 2"
    Sized with size ?team2size
  (?team1size > ?team2size)
then ?player Joins ?team2
